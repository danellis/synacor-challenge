1550 and 1560 are the most common 'out' locations
break at 1838 to read whole line
2972 calls R1 (3590) for 'use'
1480 = print encrypted string (key = 25978)
  R0 = pointer to <length> <enc char 1> ...
  R2 = xor key
Miscalibration detection probably starts at 5494 (line 4502)
Called from:
5511: call 6049    ; 17 6049

29308 is encrypted miscalibration message
Decryption routine at 2147

5473 is R7 == 0 test (line 612)

1863 print a code

R0: 4
R1: 1
R2: 3
R3: 10
R4: 101
R5: 0
R6: 0
R7: 12345

6049: jt R0, 6057    ; 7 32768 6057
6052: add R0, R1, 1 (SOH)    ; 9 32768 32769 1
6056: ret     ; 18
6057: jt R1, 6070    ; 7 32769 6070
6060: add R0, R0, 32767    ; 9 32768 32768 32767
6064: set R1, R7    ; 1 32769 32775
6067: call 6049    ; 17 6049
6069: ret     ; 18
6070: push R0    ; 2 32768
6072: add R1, R1, 32767    ; 9 32769 32769 32767
6076: call 6049    ; 17 6049
6078: set R1, R0    ; 1 32769 32768
6081: pop R0    ; 3 32768
6083: add R0, R0, 32767    ; 9 32768 32768 32767
6087: call 6049    ; 17 6049
6089: ret     ; 18

r0 = 4
r1 = 1
r7 = 12345
def code_6049():
    if r0 == 0:
        r0 = r1 + 1
        return

    # When r1 reaches zero, decrement r0, reset r1 to the magic number and recurse
    if r1 == 0:
        r0 -= 1
        r1 = r7
        code_6049()
        return

    push(r0)
    r1 -= 1
    code_6049()
    r1 = r0
    r0 = pop()
    r0 -= 1
    code_6049()
